import { GameMap } from '../game-logic/game-map';
import { SelectedMap } from '../game-logic/selected-map';
import { PlayerMapAction } from './player-map-action';
export declare class Game {
    width: number;
    height: number;
    frame: number;
    tick: number;
    playing: boolean;
    updateSpeedLevel: number;
    pasteDirection: number;
    isSelecting: boolean;
    mousePosition: [number, number];
    drawPastedArrows: boolean;
    scale: number;
    offset: [number, number];
    screenUpdated: boolean;
    readonly gameMap: GameMap;
    readonly selectedMap: SelectedMap;
    private render;
    private updateTime;
    private drawTime;
    private updatesPerSecond;
    private drawsPerSecond;
    private focusingTime;
    private focusingSpeed;
    private focusingOffset;
    private focusingScale;
    private startingOffset;
    private startingScale;
    private focusing;
    constructor(gl: WebGLRenderingContext, width: number, height: number);
    draw(): void;
    updateFrame(payload?: () => void): void;
    updateTick(payload?: () => void): void;
    undoChanges(action: PlayerMapAction): void;
    redoChanges(action: PlayerMapAction): void;
    clearSignals(): void;
    focusOnBox(x0: number, y0: number, x1: number, y1: number, padding?: number, speed?: number): void;
    updateFocus(): void;
    setScale(newScale: number, mousePosition: [number, number]): void;
    resize(width: number, height: number): void;
    dispose(): void;
}
